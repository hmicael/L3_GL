I- Contexte du projet, objectif et périmètre
	- Contexte(avec exemple concret de la situation):
		Reservation de salle de classe (type: TD, TP, Amphi):
			- Les prof vont donner les contraintes selon le nombre d'heure, type de cours, la disponibilité du prof, ordre des cours (CM -> TD/TP)
			- Le gestionnaire va saisir les contraintes suite à la demande du prof
			- Les étudiants vont pouvoir consulter le tableau
	- Objectif: Generer un edt dynamique (qui peut changer) en fonction des contraintes du prof
    - Perimetre: un batiment de la fac
	    - A qui ? Etudiant, Prof, Gestionnaire
	    - A quoi ? La FAC
	    - Sur quoi ? Sur qui ? BDD ??
	    - Ressource: salle de classe


II- Les spécification fonctionnelle ( Que doit faire le système logiciel ?)
		- L'ensemble des fonctionnalité du projet:
			- ELEVE:
				- login (univ)
				- consulation edt
			- PROF:
				- login (univ)
				- CRUD contraintes (P)
			- GESTIONNAIRE:
			    - login (univ)
			    - affichage edt
			    - Update (traitement) des contraintes (: envoi de ticket (P)
			    - CRUD salle de classe
			    - CRUD matière
            
		- Le cycle de vie du projet (P<->G->E)
		- Le processus du projet
		- Contrainte:
			- id 
			- idProf
			- nbH
			- nbSeance
			- nbGroupe
			- lien entre CM, TD, TP (ex: TD et TP interaclé)		

III. Contraintes
	- Utilisateur
	- Economique:
		- Maintenance: personnel qui va l'utiliser (Administrateur, ...)
		- Type de licence: open source
		- Cout des matériels
		- Financière (aucun)
	- Sécuritaires (Auth LDAP univ / ACL selon info LDAP)
	- Industrielles (doit être fabriqué au Ile de France, sur GitHub)
	- Matérielles (Windows, Linux, MacOS, et les smartphone => en général sur tous les écrans)
	- Temporelles (3 mois)
	- Sécurité (Auth LDAP univ / ACL selon info LDAP)
	- Ergonomie (Responsive design ?)
	- Disponibilité(24/24 et 7/7)
